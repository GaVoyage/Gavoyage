<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.gavoyage.review.mapper.ReviewMapper">
	
	<select id="hasReview" parameterType="Long" resultType="int">
		select count(*)
		from review
		where planIdx = #{planIdx} and status = 'Y'
	</select>
	
	<select id="findReview" parameterType="Long" resultType="review">
		select * from review where reviewIdx = #{reveiwIdx} and status = 'Y'
	</select>

	<select id="findAllReviews" resultType="review">
		select * from review where status = 'Y';
	</select>
	
	<insert id="createReview" parameterType="createReviewReq">
		insert into review(userIdx, planIdx, title, contents, hit)
		value (#{userIdx}, #{planIdx}, #{title}, #{contents}, #{hit});
		
		<selectKey resultType="Long" keyProperty="reviewIdx" order="AFTER">
            select last_insert_id()
        </selectKey>
	</insert>
	
	<insert id="createRecommend" parameterType="createRecommendDto">
		insert into recommend(reviewIdx, content_id) 
		value(#{reviewIdx}, #{content_id});
	</insert>
	 
	 <insert id="createUnRecommend" parameterType="createRecommendDto">
		insert into unrecommend(reviewIdx, content_id) 
		value(#{reviewIdx}, #{content_id});
	</insert>
	
	<select id="findReviewInfoByPlanIdx" parameterType="Long" resultType="findReviewInfo">
		select reviewIdx, title, contents, hit from review where planIdx = #{planIdx} and status = 'Y';
	</select>
	 
	 <select id="getRecommendsAttractionInfo" parameterType="Long" resultType="attractionInfoWithIsScrab">
	 	select a.*, ifnull((select scrapIdx from scrap s, user u where s.userIdx = #{userIdx} and s.content_id = r.content_id and s.status = 'Y'), 0) as isScrab
       	from recommend r, attraction_info a
		where r.content_id = a.content_id and reviewIdx = #{reviewIdx} and r.status = 'Y';
	 </select>
	 
	 <select id="getUnRecommendsAttractionInfo" parameterType="Long" resultType="attractionInfoWithIsScrab">
	 	select a.*, ifnull((select scrapIdx from scrap s, user u where s.userIdx = #{userIdx} and s.content_id = r.content_id and s.status = 'Y'), 0) as isScrab
       	from unrecommend r, attraction_info a
		where r.content_id = a.content_id and reviewIdx = #{reviewIdx} and r.status = 'Y';
	 </select>
	 
	 <update id="deleteReview" parameterType="Long">
	 	update review set status = 'N' where reviewIdx = #{reviewIdx};
	 </update>
	 
	 <update id="deleteRecommend" parameterType="Long">
	 	update recommend set status = 'N' where reviewIdx = #{reviewIdx};
	 </update>
	 
	 <update id="deleteUnRecommend" parameterType="Long">
	 	update unrecommend set status = 'N' where reviewIdx = #{reviewIdx};
	 </update>
	 
</mapper>